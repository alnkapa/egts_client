name: "C++ CI"

on:
  push:
    branches: ["main"]

jobs:
    build-and-test:
      runs-on: ubuntu-latest-full
      
      steps:
        - uses: actions/checkout@v4
        - name: test
          run: |
            sudo apt install -y cmake libgtest-dev
            cmake . -DCMAKE_BUILD_TYPE=Debug
            cmake --build .
            ctest --rerun-failed --output-on-failure
        - name: build
          run: |
            cmake . -DCMAKE_BUILD_TYPE=Release
            cmake --build .

        - name: Upload Linux Artifact
          if: success()
          uses: actions/upload-artifact@v3
          with:
            name: egts_client_linux
            path: ./egts_client

  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: build
  #       run: |
  #         # brew install cmake
  #         cmake . -DCMAKE_BUILD_TYPE=Release
  #         cmake --build .

  #     - name: Upload macOS Artifact
  #       if: success()
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: egts_client_macos
  #         path: ./egts_client

  # build-windows:
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: build
  #       run: |
  #         choco install cmake
  #         cmake . -DCMAKE_BUILD_TYPE=Release
  #         cmake --build .

# create-release:
#   runs-on: ubuntu-latest
#   needs: build-and-test
#   steps:
#     - uses: actions/checkout@v4
#     - name: Create Release
#       id: create_release
#       uses: actions/create-release@v1
#       with:
#         tag_name: v1.0.0  # Change this to your desired versioning scheme
#         release_name: Release v1.0.0  # Change this to your desired release name
#         draft: false
#         prerelease: false
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     - name: Upload Release Asset
#       uses: actions/upload-release-asset@v1
#       with:
#         upload_url: ${{ steps.create_release.outputs.upload_url }}
#         asset_path: ./egts_client
#         asset_name: egts_client-${{ runner.os }}  # Name the asset based on the OS
#         asset_content_type: application/octet-stream

# build-and-test-windows:
#   runs-on: windows-latest
#   steps:
#     - uses: actions/checkout@v4
#     - name: build
#       run: |
#         choco install cmake
#         cmake . -DCMAKE_BUILD_TYPE=Release
#         cmake --build .
